function txt=displayquery(empt,event_obj)

a=get(event_obj,'Target');
hAxes = get(a,'Parent');
assetData = getappdata(hAxes,'AssetData');
pos=get(event_obj,'Position');
label=assetData.lab(pos(2),pos(1));
index=find(assetData.label==label);

    
if isempty(index)
    txt={'Select a crack'};
elseif assetData.conv==0
    if assetData.developermode==1
        txt={['label          ',num2str(assetData.label(index)),char(10),...
        'Area           ',num2str(assetData.area(index)),' pixels',char(10),...
        'Length         ',num2str(assetData.length(index)),' pixels',char(10),...
        'Width          ',num2str(assetData.width(index)),' pixels',char(10),...
        'Aspect Ratio   ',num2str(assetData.aspectratio(index)),char(10),...
        'Orientation    ',num2str(assetData.orientation(index)),' °',char(10),...
        'Fitting Ellipse Method Length      ',num2str(assetData.FerretMax(index)),' pixels',char(10),...
        'Fitting Ellipse Method Width       ',num2str(assetData.FerretMin(index)),' pixels',char(10),...
        'Fitting Ellipse Method Orientation ',num2str(assetData.FerretOrient(index)),' °']};
        setappdata(hAxes,'SelectedLabel',assetData.label(index));
    else
        txt={['label          ',num2str(assetData.label(index)),char(10),...
        'Area           ',num2str(assetData.area(index)),' pixels',char(10),...
        'Length         ',num2str(assetData.length(index)),' pixels',char(10),...
        'Width          ',num2str(assetData.width(index)),' pixels',char(10),...
        'Aspect Ratio   ',num2str(assetData.aspectratio(index)),char(10),...
        'Orientation    ',num2str(assetData.orientation(index)),' °']};
        setappdata(hAxes,'SelectedLabel',assetData.label(index));
    end
else
    if assetData.developermode==1
        txt={['label          ',num2str(assetData.label(index)),char(10),...
        'Area           ',num2str(assetData.area(index)),' micron',char(10),...
        'Length         ',num2str(assetData.length(index)),' micron',char(10),...
        'Width          ',num2str(assetData.width(index)),' micron',char(10),...
        'Aspect Ratio   ',num2str(assetData.aspectratio(index)),char(10),...
        'Orientation    ',num2str(assetData.orientation(index)),' °',char(10),...
        'Fitting Ellipse Method Length      ',num2str(assetData.FerretMax(index)),' micron',char(10),...
        'Fitting Ellipse Method Width       ',num2str(assetData.FerretMin(index)),' micron',char(10),...
        'Fitting Ellipse Method Orientation ',num2str(assetData.FerretOrient(index)),' °']};
        setappdata(hAxes,'SelectedLabel',assetData.label(index));

    else
        txt={['label          ',num2str(assetData.label(index)),char(10),...
        'Area           ',num2str(assetData.area(index)),' micron',char(10),...
        'Length         ',num2str(assetData.length(index)),' micron',char(10),...
        'Width          ',num2str(assetData.width(index)),' micron',char(10),...
        'Aspect Ratio   ',num2str(assetData.aspectratio(index)),char(10),...
        'Orientation    ',num2str(assetData.orientation(index)),' °']};
        setappdata(hAxes,'SelectedLabel',assetData.label(index));
    end
end
